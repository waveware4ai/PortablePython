
ubuntu install with ubuntu-22.04.5-desktop-amd64.iso


kr.archive.ubuntu.com -> mirror.kakao.com
sudo sed -i 's/kr.archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list


sudo apt update 
sudo apt install net-tools
sudo apt install openssh-server -y

sudo apt-get install cifs-utils
sudo mkdir /mnt/test

sudo apt-get install build-essential gdb lcov pkg-config               \
      libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev \
      libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev       \
      lzma lzma-dev tk-dev uuid-dev zlib1g-dev libmpdec-dev patchelf environment-modules

------------------------------------------------------------------------------- python original take0 (system dependency) for python-3.10.15

export BLD_HOME=/home/waveware/genuine
export WORKHOME=$BLD_HOME

cd $WORKHOME
export PYTHON_VERSION=3.10.15
export PYTHON_DOWNLOAD=python-${PYTHON_VERSION}.tar.xz
export PYTHON_SRC_HOME=$WORKHOME/python-${PYTHON_VERSION}.genuine
export PYTHON_TGT_HOME=$WORKHOME/python-${PYTHON_VERSION}.genuine.out
rm -rf $PYTHON_SRC_HOME
rm -rf $PYTHON_TGT_HOME

if ! [ -f ./$PYTHON_DOWNLOAD ]; then
    echo [INF] download ... $PYTHON_DOWNLOAD
    wget -O python-${PYTHON_VERSION}.tar.xz https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz
fi
tar -xvf $PYTHON_DOWNLOAD
mv Python-${PYTHON_VERSION} $PYTHON_SRC_HOME
cd $PYTHON_SRC_HOME


------------------------------------------------------------------------------- start of patch

##### edit source, before compile 
##### lib/site.py ::: .pth getsitepackages patch
lib/site.py 
382 line
getsitepackages
                sitepackages.append(path)
                EXEC_HOME=os.path.dirname(sys.executable) #14mhz
                sitepackages.append(os.path.join(EXEC_HOME, libdir, "site-packages")) #14mhz
                sitepackages.append(EXEC_HOME) #14mhz

#### module/getpath.c  ::: avoid Could not find platform independent libraries <prefix>
1557 - debug only
    printf("[INF] pythonpath_macro  [%ls]\n", calculate->pythonpath_macro );
    printf("[INF] prefix_macro      [%ls]\n", calculate->prefix_macro     );
    printf("[INF] exec_prefix_macro [%ls]\n", calculate->exec_prefix_macro);
    printf("[INF] vpath_macro       [%ls]\n", calculate->vpath_macro      );
    printf("[INF] lib_python        [%ls]\n", calculate->lib_python       );
    printf("[INF] path_env          [%ls]\n", calculate->path_env         );
    printf("[INF] zip_path          [%ls]\n", calculate->zip_path         );
    printf("[INF] argv0_path        [%ls]\n", calculate->argv0_path       );
    printf("[INF] prefix            [%ls]\n", calculate->prefix           );
    printf("[INF] exec_prefix       [%ls]\n", calculate->exec_prefix      );

1301 line
    /*
    wchar_t *path = joinpath2(calculate->platlibdir,
                              L"python" Py_STRINGIFY(PY_MAJOR_VERSION) Py_STRINGIFY(PY_MINOR_VERSION)
                              L".zip");*/
    wchar_t *path = joinpath2(calculate->argv0_path,
                              L"python" Py_STRINGIFY(PY_MAJOR_VERSION) Py_STRINGIFY(PY_MINOR_VERSION)
                              L".zip");   
590 line
      //calculate->prefix = joinpath2(calculate->prefix_macro, calculate->lib_python);
        calculate->prefix = joinpath2(calculate->argv0_path, L"lib");
820 line
     //calculate->exec_prefix = joinpath2(calculate->exec_prefix_macro, lib_dynload);  
        
586 line
          //fprintf(stderr, "Could not find platform independent libraries <prefix>\n");
808 line
          //fprintf(stderr, "Could not find platform dependent libraries <exec_prefix>\n");   
1535 line
      //fprintf(stderr, "Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]\n");        
        
##### pip patch

sysconfig.py
25 line
EXEC_HOME=os.path.dirname(sys.executable)

30 line
    'posix_prefix': {
        #'stdlib': '{installed_base}/{platlibdir}/python{py_version_short}',
        #'platstdlib': '{platbase}/{platlibdir}/python{py_version_short}',
        #'purelib': '{base}/lib/python{py_version_short}/site-packages',
        #'platlib': '{platbase}/{platlibdir}/python{py_version_short}/site-packages',
        #'include': '{installed_base}/include/python{py_version_short}{abiflags}',
        #'platinclude': '{installed_platbase}/include/python{py_version_short}{abiflags}',
        #'scripts': '{base}/bin',
        #'data': '{base}',
        'stdlib': f'{EXEC_HOME}/lib',
        'platstdlib': f'{EXEC_HOME}/lib',
        'purelib': f'{EXEC_HOME}/lib/site-packages',
        'platlib': f'{EXEC_HOME}/lib/site-packages',
        'include': f'{EXEC_HOME}/include',
        'platinclude': f'{EXEC_HOME}/include',
        'scripts': f'{EXEC_HOME}/script',
        'data': f'{EXEC_HOME}',

77 line
        'posix_user': {
            #'stdlib': '{userbase}/{platlibdir}/python{py_version_short}',
            #'platstdlib': '{userbase}/{platlibdir}/python{py_version_short}',
            #'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
            #'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
            #'include': '{userbase}/include/python{py_version_short}',
            #'scripts': '{userbase}/bin',
            #'data': '{userbase}',
            'stdlib': '{EXEC_HOME}/{platlibdir}',
            'platstdlib': '{EXEC_HOME}/{platlibdir}',
            'purelib': '{EXEC_HOME}/lib',
            'platlib': '{EXEC_HOME}/lib',
            'include': '{EXEC_HOME}/include',
            'scripts': '{EXEC_HOME}/script',
            'data': '{EXEC_HOME}',
            },

#####

------------------------------------------------------------------------------- end of patch

wget https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
sh ./pyenv-installer

cd $PYTHON_SRC_HOME
make clean
make distclean


unset CC
unset CXX
unset CFLAGS
unset CPPFLAGS
unset LDFLAGS
./configure --enable-optimizations --enable-ipv6      \
            --without-ensurepip                                  \
            --prefix=$PYTHON_TGT_HOME --bindir=$PYTHON_TGT_HOME 

make -j8 LDFLAGS+=-s && make install
cd $WORKHOME


::: compile problem
The following modules found by detect_modules() in setup.py, have been
built by the Makefile instead, as configured by the Setup files:
_abc                  pwd                   time




------------------------------------------------------------------------------- end of compile

cd $PYTHON_TGT_HOME
cp python3.10 python
rm 2to3 2to3-3.10 idle3 idle3.10 pydoc3 pydoc3.10 python3 python3.10 python3.10-config python3-config

mkdir libs
mkdir lib.test

mv -v lib/{libpython3.10.a,pkgconfig} ./libs
mv -v lib/python3.10/{config-3.10-x86_64-linux-gnu,tkinter} ./libs
mv lib/python3.10/lib-dynload ./pyd
mv ./pyd/_test* ./lib.test
mv lib/python3.10/test ./lib.test
mv lib/python3.10/site-packages/ ./lib

#####

vi python310.pth
./python310.zip
.
./lib
./lib.test
./pyd
./lib/site-packages
./lib/site-packages.pip.zip
./library/bin

# Uncomment to run site.main() automatically
#import site


#####

./python -c "import os, sys;import _ssl;print(_ssl.__file__);"
./python -c "import os, sys;import _bz2;print(_bz2.__file__);"
./python -c "import os, sys;import _posixsubprocess;print(_posixsubprocess.__file__);"
./python -c "import os, sys; print(sys.path);"

------------------------------------------------------------------------------- test
# test
cd $PYTHON_TGT_HOME
./python -m test --pgo --timeout=1200 || true

waveware@VM:~/genuine/python-3.10.15.genuine.out$ ./python -m test --pgo --timeout=1200 || true
0:00:00 load avg: 3.60 Run tests sequentially (timeout: 20 min)
0:00:00 load avg: 3.60 [ 1/44] test_array
0:00:00 load avg: 3.60 [ 2/44] test_base64
0:00:00 load avg: 3.60 [ 3/44] test_binascii
0:00:00 load avg: 3.72 [ 4/44] test_binop
0:00:00 load avg: 3.72 [ 5/44] test_bisect
0:00:00 load avg: 3.72 [ 6/44] test_bytes
0:00:01 load avg: 3.72 [ 7/44] test_bz2
0:00:01 load avg: 3.72 [ 8/44] test_cmath
0:00:01 load avg: 3.72 [ 9/44] test_codecs
0:00:02 load avg: 3.72 [10/44] test_collections
0:00:02 load avg: 3.72 [11/44] test_complex
0:00:02 load avg: 3.72 [12/44] test_dataclasses
0:00:02 load avg: 3.72 [13/44] test_datetime
0:00:05 load avg: 3.66 [14/44] test_decimal
0:00:06 load avg: 3.66 [15/44] test_difflib
0:00:07 load avg: 3.66 [16/44] test_embed
0:00:07 load avg: 3.66 [17/44] test_float
0:00:07 load avg: 3.66 [18/44] test_fstring
0:00:07 load avg: 3.66 [19/44] test_functools
0:00:07 load avg: 3.66 [20/44] test_generators
0:00:07 load avg: 3.66 [21/44] test_hashlib
0:00:08 load avg: 3.66 [22/44] test_heapq
0:00:08 load avg: 3.66 [23/44] test_int
0:00:08 load avg: 3.66 [24/44] test_itertools
0:00:09 load avg: 3.66 [25/44] test_json
0:00:10 load avg: 3.53 [26/44] test_long
0:00:11 load avg: 3.53 [27/44] test_lzma
0:00:11 load avg: 3.53 [28/44] test_math
0:00:12 load avg: 3.53 [29/44] test_memoryview
0:00:13 load avg: 3.53 [30/44] test_operator
0:00:13 load avg: 3.53 [31/44] test_ordered_dict
0:00:13 load avg: 3.53 [32/44] test_patma
0:00:13 load avg: 3.53 [33/44] test_pickle
0:00:15 load avg: 3.80 [34/44] test_pprint
0:00:15 load avg: 3.80 [35/44] test_re
0:00:16 load avg: 3.80 [36/44] test_set
0:00:17 load avg: 3.80 [37/44] test_sqlite
0:00:18 load avg: 3.80 [38/44] test_statistics
0:00:19 load avg: 3.80 [39/44] test_struct
0:00:19 load avg: 3.80 [40/44] test_tabnanny
0:00:19 load avg: 3.80 [41/44] test_time
0:00:21 load avg: 3.50 [42/44] test_unicode
0:00:22 load avg: 3.50 [43/44] test_xml_etree
0:00:22 load avg: 3.50 [44/44] test_xml_etree_c

Total duration: 22.8 sec
Tests result: SUCCESS



------------------------------------------------------------------------------- make a zip archive

#export PYTHONPYCACHEPREFIX=$PWD/lib.compile
unset PYTHONPYCACHEPREFIX
./python -m compileall -b ./lib
find ./lib -name "__pycache__" | xargs rm -rf "__pycache__"

cd lib/python3.10
zip -r $PYTHON_TGT_HOME/python310.zip *
cd ..
rm -rf python3.10
cd $PYTHON_TGT_HOME

zip -r python310.dev.zip include libs lib.test
rm -rf include libs lib.test


wget -O python.pip.py https://bootstrap.pypa.io/get-pip.py


./python python.pip.py


------------------------------------------------------------------------------- install another package

.
.
.
