
ubuntu install with ubuntu-22.04.5-desktop-amd64.iso


kr.archive.ubuntu.com -> mirror.kakao.com
sudo sed -i 's/kr.archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list

sudo apt update 
sudo apt install net-tools  -y
sudo apt install openssh-server -y

sudo apt-get install cifs-utils  -y
sudo mkdir /mnt/test
sudo mount -t cifs  -o user=administrator,,uid=0,gid=0,file_mode=0777,dir_mode=0777 //192.168.3.14/w$/\!VM/mount /mnt/test


sudo apt-get install build-essential gdb lcov pkg-config               \
      libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev \
      libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev       \
      lzma lzma-dev tk-dev uuid-dev zlib1g-dev libmpdec-dev patchelf environment-modules

------------------------------------------------------------------------------- python original take0 (system dependency) for python-3.9.20

export BLD_HOME=/home/waveware/genuine/ddd
export WORKHOME=$BLD_HOME

cd $WORKHOME
export PYTHON_VERSION=3.9.20
export PYTHON_DOWNLOAD=python-${PYTHON_VERSION}.tar.xz
export PYTHON_SRC_HOME=$WORKHOME/python-${PYTHON_VERSION}.genuine
export PYTHON_TGT_HOME=$WORKHOME/python-${PYTHON_VERSION}.genuine.out
rm -rf $PYTHON_SRC_HOME
rm -rf $PYTHON_TGT_HOME

if ! [ -f ./$PYTHON_DOWNLOAD ]; then
    echo [INF] download ... $PYTHON_DOWNLOAD
    wget -O python-${PYTHON_VERSION}.tar.xz https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz
fi
tar -xvf $PYTHON_DOWNLOAD
mv Python-${PYTHON_VERSION} $PYTHON_SRC_HOME
cd $PYTHON_SRC_HOME


------------------------------------------------------------------------------- start of patch


##### edit source, before compile 
##### lib/site.py ::: .pth getsitepackages patch
lib/site.py 
355 line
getsitepackages
                sitepackages.append(path)
                EXEC_HOME=os.path.dirname(sys.executable) #14mhz
                sitepackages.append(os.path.join(EXEC_HOME, "lib", "site-packages")) #14mhz
                sitepackages.append(EXEC_HOME) #14mhz


#### module/getpath.c  ::: avoid Could not find platform independent libraries <prefix>
1557 - debug only
    printf("[INF] pythonpath_macro  [%ls]\n", calculate->pythonpath_macro );
    printf("[INF] prefix_macro      [%ls]\n", calculate->prefix_macro     );
    printf("[INF] exec_prefix_macro [%ls]\n", calculate->exec_prefix_macro);
    printf("[INF] vpath_macro       [%ls]\n", calculate->vpath_macro      );
    printf("[INF] lib_python        [%ls]\n", calculate->lib_python       );
    printf("[INF] path_env          [%ls]\n", calculate->path_env         );
    printf("[INF] zip_path          [%ls]\n", calculate->zip_path         );
    printf("[INF] argv0_path        [%ls]\n", calculate->argv0_path       );
    printf("[INF] prefix            [%ls]\n", calculate->prefix           );
    printf("[INF] exec_prefix       [%ls]\n", calculate->exec_prefix      );

1301 line
    /*
    wchar_t *path = joinpath2(calculate->platlibdir,
                              L"python" Py_STRINGIFY(PY_MAJOR_VERSION) Py_STRINGIFY(PY_MINOR_VERSION)
                              L".zip");*/
    wchar_t *path = joinpath2(calculate->argv0_path,
                              L"python" Py_STRINGIFY(PY_MAJOR_VERSION) Py_STRINGIFY(PY_MINOR_VERSION)
                              L".zip");   
590 line
      //calculate->prefix = joinpath2(calculate->prefix_macro, calculate->lib_python);
        calculate->prefix = joinpath2(calculate->argv0_path, L"lib");
820 line
      //calculate->exec_prefix = joinpath2(calculate->exec_prefix_macro, lib_dynload);
        calculate->exec_prefix = joinpath2(calculate->argv0_path, L"pyd");
        
586 line
          //fprintf(stderr, "Could not find platform independent libraries <prefix>\n");
808 line
          //fprintf(stderr, "Could not find platform dependent libraries <exec_prefix>\n");   
1540 line
      //fprintf(stderr, "Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]\n");        
        
##### pip patch

sysconfig.py
25 line
EXEC_HOME=os.path.dirname(sys.executable)

30 line
    'posix_prefix': {
        #'stdlib': '{installed_base}/{platlibdir}/python{py_version_short}',
        #'platstdlib': '{platbase}/{platlibdir}/python{py_version_short}',
        #'purelib': '{base}/lib/python{py_version_short}/site-packages',
        #'platlib': '{platbase}/{platlibdir}/python{py_version_short}/site-packages',
        #'include': '{installed_base}/include/python{py_version_short}{abiflags}',
        #'platinclude': '{installed_platbase}/include/python{py_version_short}{abiflags}',
        #'scripts': '{base}/bin',
        #'data': '{base}',
        'stdlib': f'{EXEC_HOME}/lib',
        'platstdlib': f'{EXEC_HOME}/lib',
        'purelib': f'{EXEC_HOME}/lib/site-packages',
        'platlib': f'{EXEC_HOME}/lib/site-packages',
        'include': f'{EXEC_HOME}/include',
        'platinclude': f'{EXEC_HOME}/include',
        'scripts': f'{EXEC_HOME}/script',
        'data': f'{EXEC_HOME}',

77 line
    'posix_user': {
        #'stdlib': '{userbase}/{platlibdir}/python{py_version_short}',
        #'platstdlib': '{userbase}/{platlibdir}/python{py_version_short}',
        #'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
        #'platlib': '{userbase}/{platlibdir}/python{py_version_short}/site-packages',
        #'include': '{userbase}/include/python{py_version_short}',
        #'scripts': '{userbase}/bin',
        #'data': '{userbase}',
        'stdlib': f'{EXEC_HOME}/lib',
        'platstdlib': f'{EXEC_HOME}/lib',
        'purelib': f'{EXEC_HOME}/lib/site-packages',
        'platlib': f'{EXEC_HOME}/lib/site-packages',
        'include': f'{EXEC_HOME}/include',
        'scripts': f'{EXEC_HOME}/script',
        'data': f'{EXEC_HOME}',

##### pip patch2
lib/distutils/command
30 line
EXEC_HOME=os.path.dirname(sys.executable) #14mhz

INSTALL_SCHEMES = {
    'unix_prefix': {
        #'purelib': '$base/lib/python$py_version_short/site-packages',
        #'platlib': '$platbase/$platlibdir/python$py_version_short/site-packages',
        #'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
        #'scripts': '$base/bin',
        #'data'   : '$base',
        'purelib': f'{EXEC_HOME}/lib/site-packages',
        'platlib': f'{EXEC_HOME}/lib/site-packages',
        'headers': f'{EXEC_HOME}/include/$dist_name',
        'scripts': f'{EXEC_HOME}/script',
        'data'   : f'{EXEC_HOME}',
        },
    'unix_home': {
        'purelib': '$base/lib/python',
        'platlib': '$base/$platlibdir/python',
        'headers': '$base/include/python/$dist_name',
        'scripts': '$base/bin',
        'data'   : '$base',
        },
    'nt': WINDOWS_SCHEME,
    }


------------------------------------------------------------------------------- end of patch

wget https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
sh ./pyenv-installer

cd $PYTHON_SRC_HOME
make clean
make distclean


unset CC
unset CXX
unset CFLAGS
unset CPPFLAGS
unset LDFLAGS
./configure --enable-optimizations --enable-ipv6      \
            --without-ensurepip                                  \
            --prefix=$PYTHON_TGT_HOME --bindir=$PYTHON_TGT_HOME 

make -j8 LDFLAGS+=-s && make install
cd $WORKHOME




------------------------------------------------------------------------------- end of compile

cd $PYTHON_TGT_HOME
cp python3.9 python
rm 2to3 2to3-3.9 idle3 idle3.9 pydoc3 pydoc3.9 python3 python3.9 python3.9-config python3-config

mkdir libs
mkdir lib.test

mv -v lib/{libpython3.9.a,pkgconfig} ./libs
mv -v lib/python3.9/{config-3.9-x86_64-linux-gnu,tkinter} ./libs
mv lib/python3.9/lib-dynload ./pyd
mv ./pyd/_test* ./lib.test
mv lib/python3.9/test ./lib.test
mv lib/python3.9/site-packages/ ./lib

#####

vi python39.pth
./python39.zip
.
./lib
./lib.test
./pyd
./lib/site-packages
./lib/site-packages.pip.zip
./library/bin

# Uncomment to run site.main() automatically
#import site


#####

./python -c "import os, sys;import _ssl;print(_ssl.__file__);"
./python -c "import os, sys;import _bz2;print(_bz2.__file__);"
./python -c "import os, sys;import _posixsubprocess;print(_posixsubprocess.__file__);"
./python -c "import os, sys; print(sys.path);"

------------------------------------------------------------------------------- test
# test
cd $PYTHON_TGT_HOME
./python -m test --pgo --timeout=1200 || true

waveware@VM:~/genuine/python-3.9.20.genuine.out$ ./python -m test --pgo --timeout=1200 || true
0:00:00 load avg: 0.70 Run tests sequentially (timeout: 20 min)
0:00:00 load avg: 0.70 [ 1/43] test_array
0:00:00 load avg: 0.70 [ 2/43] test_base64
0:00:00 load avg: 0.70 [ 3/43] test_binascii
0:00:00 load avg: 0.70 [ 4/43] test_binop
0:00:00 load avg: 0.70 [ 5/43] test_bisect
0:00:00 load avg: 0.70 [ 6/43] test_bytes
0:00:00 load avg: 0.73 [ 7/43] test_bz2
0:00:01 load avg: 0.73 [ 8/43] test_cmath
0:00:01 load avg: 0.73 [ 9/43] test_codecs
0:00:01 load avg: 0.73 [10/43] test_collections
0:00:02 load avg: 0.73 [11/43] test_complex
0:00:02 load avg: 0.73 [12/43] test_dataclasses
0:00:02 load avg: 0.73 [13/43] test_datetime
0:00:04 load avg: 0.73 [14/43] test_decimal
0:00:06 load avg: 0.75 [15/43] test_difflib
0:00:06 load avg: 0.75 [16/43] test_embed
0:00:06 load avg: 0.75 [17/43] test_float
0:00:06 load avg: 0.75 [18/43] test_fstring
0:00:06 load avg: 0.75 [19/43] test_functools
0:00:07 load avg: 0.75 [20/43] test_generators
0:00:07 load avg: 0.75 [21/43] test_hashlib
0:00:07 load avg: 0.75 [22/43] test_heapq
0:00:07 load avg: 0.75 [23/43] test_int
0:00:07 load avg: 0.75 [24/43] test_itertools
0:00:08 load avg: 0.75 [25/43] test_json
0:00:09 load avg: 0.75 [26/43] test_long
0:00:10 load avg: 0.77 [27/43] test_lzma
0:00:11 load avg: 0.77 [28/43] test_math
0:00:11 load avg: 0.77 [29/43] test_memoryview
0:00:12 load avg: 0.77 [30/43] test_operator
0:00:12 load avg: 0.77 [31/43] test_ordered_dict
0:00:12 load avg: 0.77 [32/43] test_pickle
0:00:13 load avg: 0.77 [33/43] test_pprint
0:00:14 load avg: 0.77 [34/43] test_re
0:00:14 load avg: 0.77 [35/43] test_set
0:00:15 load avg: 0.77 [36/43] test_sqlite
0:00:16 load avg: 0.71 [37/43] test_statistics
0:00:16 load avg: 0.71 [38/43] test_struct
0:00:16 load avg: 0.71 [39/43] test_tabnanny
0:00:17 load avg: 0.71 [40/43] test_time
0:00:19 load avg: 0.71 [41/43] test_unicode
0:00:19 load avg: 0.71 [42/43] test_xml_etree
0:00:19 load avg: 0.71 [43/43] test_xml_etree_c

Total duration: 19.9 sec
Tests result: SUCCESS




------------------------------------------------------------------------------- make a zip archive

#export PYTHONPYCACHEPREFIX=$PWD/lib.compile
unset PYTHONPYCACHEPREFIX
./python -m compileall -b ./lib
find ./lib -name "__pycache__" | xargs rm -rf "__pycache__"

cd lib/python3.9
zip -r $PYTHON_TGT_HOME/python39.zip *
cd ..
rm -rf python3.9
cd $PYTHON_TGT_HOME

zip -r python39.dev.zip include libs lib.test
rm -rf include libs lib.test


wget -O python.pip.py https://bootstrap.pypa.io/get-pip.py


./python python.pip.py


------------------------------------------------------------------------------- install another package

./python -m pip install lit==15.0.7 -v 

./python -m pip install torch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 --index-url https://download.pytorch.org/whl/cu118
import torch
torch.cuda.is_available()
torch.cuda.device_count()
torch.cuda.current_device()
torch.cuda.get_device_name(0)
torch.rand(2,3).cuda()

